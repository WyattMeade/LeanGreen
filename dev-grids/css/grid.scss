/* --------------------
   Variables
   -------------------- */

$system-width: 1200px;
$column-width: 60px;
$gutter-width: 20px;
$columns: 15;

/* --------------------
   Helpers
   -------------------- */

%selfclear {

	&:before,
	&:after {
	    content: " ";
	    display: table;
	}

	&:after {
	    clear: both;
	}
	
	*zoom: 1;

}

/* --------------------
   Grid System
   -------------------- */

.main { width: 100%; max-width: $system-width; margin-left: auto; margin-right: auto; }

.row { @extend %selfclear; }

.col { position: relative; float: left; margin: 0 (($gutter-width / 2) / $system-width * 100%); }

.pull-right { float: right; }

.pull-left { float: left; }

@mixin breakpoint($point) {

	@if $point == largest {

		@media (min-width: 1020px) { @content; }

	}

	@else if $point == large {

		@media (max-width: 1019px) { @content; }

	}

	@else if $point == medium {

		@media (max-width: 640px) { @content; }

	}

	@else if $point == small {

		@media (max-width: 480px)  { @content; }

	}

}

@for $i from 1 through $columns {

	$include-margin: $gutter-width;
	$calc-width: (($column-width * $i) + ($include-margin * ($i - 1))) / $system-width * 100%;

	.grid_#{$i}_large { width: $calc-width; }

}

@for $i from 1 through $columns {

	$include-margin: $gutter-width;
	$calc-width: (($column-width * $i) + ($include-margin * ($i - 1))) / $system-width * 100%;

	@include breakpoint(large) {

		.grid_#{$i}_medium { width: $calc-width; }	

	}

}

@for $i from 1 through $columns {

	$include-margin: $gutter-width;
	$calc-width: (($column-width * $i) + ($include-margin * ($i - 1))) / $system-width * 100%;

	@include breakpoint(medium) {

		.grid_#{$i}_small { width: $calc-width; }

	}

}

.centered { margin-left: auto; margin-right: auto; float: none; }